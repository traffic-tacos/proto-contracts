// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: proto/reservation/v1/inventory.proto

package reservationv1

import (
	v1 "github.com/traffic-tacos/proto-contracts/gen/go/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Hold status enumeration
type HoldStatus int32

const (
	HoldStatus_HOLD_STATUS_UNSPECIFIED HoldStatus = 0
	HoldStatus_HOLD_STATUS_ACTIVE      HoldStatus = 1
	HoldStatus_HOLD_STATUS_EXPIRED     HoldStatus = 2
	HoldStatus_HOLD_STATUS_RELEASED    HoldStatus = 3
	HoldStatus_HOLD_STATUS_COMMITTED   HoldStatus = 4
)

// Enum value maps for HoldStatus.
var (
	HoldStatus_name = map[int32]string{
		0: "HOLD_STATUS_UNSPECIFIED",
		1: "HOLD_STATUS_ACTIVE",
		2: "HOLD_STATUS_EXPIRED",
		3: "HOLD_STATUS_RELEASED",
		4: "HOLD_STATUS_COMMITTED",
	}
	HoldStatus_value = map[string]int32{
		"HOLD_STATUS_UNSPECIFIED": 0,
		"HOLD_STATUS_ACTIVE":      1,
		"HOLD_STATUS_EXPIRED":     2,
		"HOLD_STATUS_RELEASED":    3,
		"HOLD_STATUS_COMMITTED":   4,
	}
)

func (x HoldStatus) Enum() *HoldStatus {
	p := new(HoldStatus)
	*p = x
	return p
}

func (x HoldStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HoldStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_reservation_v1_inventory_proto_enumTypes[0].Descriptor()
}

func (HoldStatus) Type() protoreflect.EnumType {
	return &file_proto_reservation_v1_inventory_proto_enumTypes[0]
}

func (x HoldStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HoldStatus.Descriptor instead.
func (HoldStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_reservation_v1_inventory_proto_rawDescGZIP(), []int{0}
}

// Commit status enumeration
type CommitStatus int32

const (
	CommitStatus_COMMIT_STATUS_UNSPECIFIED     CommitStatus = 0
	CommitStatus_COMMIT_STATUS_SUCCESS         CommitStatus = 1
	CommitStatus_COMMIT_STATUS_FAILED_PAYMENT  CommitStatus = 2
	CommitStatus_COMMIT_STATUS_FAILED_EXPIRED  CommitStatus = 3
	CommitStatus_COMMIT_STATUS_FAILED_CONFLICT CommitStatus = 4
)

// Enum value maps for CommitStatus.
var (
	CommitStatus_name = map[int32]string{
		0: "COMMIT_STATUS_UNSPECIFIED",
		1: "COMMIT_STATUS_SUCCESS",
		2: "COMMIT_STATUS_FAILED_PAYMENT",
		3: "COMMIT_STATUS_FAILED_EXPIRED",
		4: "COMMIT_STATUS_FAILED_CONFLICT",
	}
	CommitStatus_value = map[string]int32{
		"COMMIT_STATUS_UNSPECIFIED":     0,
		"COMMIT_STATUS_SUCCESS":         1,
		"COMMIT_STATUS_FAILED_PAYMENT":  2,
		"COMMIT_STATUS_FAILED_EXPIRED":  3,
		"COMMIT_STATUS_FAILED_CONFLICT": 4,
	}
)

func (x CommitStatus) Enum() *CommitStatus {
	p := new(CommitStatus)
	*p = x
	return p
}

func (x CommitStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommitStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_reservation_v1_inventory_proto_enumTypes[1].Descriptor()
}

func (CommitStatus) Type() protoreflect.EnumType {
	return &file_proto_reservation_v1_inventory_proto_enumTypes[1]
}

func (x CommitStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommitStatus.Descriptor instead.
func (CommitStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_reservation_v1_inventory_proto_rawDescGZIP(), []int{1}
}

// Release status enumeration
type ReleaseStatus int32

const (
	ReleaseStatus_RELEASE_STATUS_UNSPECIFIED      ReleaseStatus = 0
	ReleaseStatus_RELEASE_STATUS_SUCCESS          ReleaseStatus = 1
	ReleaseStatus_RELEASE_STATUS_ALREADY_RELEASED ReleaseStatus = 2
	ReleaseStatus_RELEASE_STATUS_NOT_FOUND        ReleaseStatus = 3
	ReleaseStatus_RELEASE_STATUS_FAILED           ReleaseStatus = 4
)

// Enum value maps for ReleaseStatus.
var (
	ReleaseStatus_name = map[int32]string{
		0: "RELEASE_STATUS_UNSPECIFIED",
		1: "RELEASE_STATUS_SUCCESS",
		2: "RELEASE_STATUS_ALREADY_RELEASED",
		3: "RELEASE_STATUS_NOT_FOUND",
		4: "RELEASE_STATUS_FAILED",
	}
	ReleaseStatus_value = map[string]int32{
		"RELEASE_STATUS_UNSPECIFIED":      0,
		"RELEASE_STATUS_SUCCESS":          1,
		"RELEASE_STATUS_ALREADY_RELEASED": 2,
		"RELEASE_STATUS_NOT_FOUND":        3,
		"RELEASE_STATUS_FAILED":           4,
	}
)

func (x ReleaseStatus) Enum() *ReleaseStatus {
	p := new(ReleaseStatus)
	*p = x
	return p
}

func (x ReleaseStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReleaseStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_reservation_v1_inventory_proto_enumTypes[2].Descriptor()
}

func (ReleaseStatus) Type() protoreflect.EnumType {
	return &file_proto_reservation_v1_inventory_proto_enumTypes[2]
}

func (x ReleaseStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReleaseStatus.Descriptor instead.
func (ReleaseStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_reservation_v1_inventory_proto_rawDescGZIP(), []int{2}
}

// Check availability request
type CheckAvailabilityRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	SeatIds       []string               `protobuf:"bytes,2,rep,name=seat_ids,json=seatIds,proto3" json:"seat_ids,omitempty"` // Optional: specific seats to check
	Quantity      int32                  `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`             // Optional: number of any available seats
	Section       string                 `protobuf:"bytes,4,opt,name=section,proto3" json:"section,omitempty"`                // Optional: preferred section
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckAvailabilityRequest) Reset() {
	*x = CheckAvailabilityRequest{}
	mi := &file_proto_reservation_v1_inventory_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckAvailabilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAvailabilityRequest) ProtoMessage() {}

func (x *CheckAvailabilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_v1_inventory_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAvailabilityRequest.ProtoReflect.Descriptor instead.
func (*CheckAvailabilityRequest) Descriptor() ([]byte, []int) {
	return file_proto_reservation_v1_inventory_proto_rawDescGZIP(), []int{0}
}

func (x *CheckAvailabilityRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *CheckAvailabilityRequest) GetSeatIds() []string {
	if x != nil {
		return x.SeatIds
	}
	return nil
}

func (x *CheckAvailabilityRequest) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *CheckAvailabilityRequest) GetSection() string {
	if x != nil {
		return x.Section
	}
	return ""
}

// Check availability response
type CheckAvailabilityResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Available          bool                   `protobuf:"varint,1,opt,name=available,proto3" json:"available,omitempty"`
	AvailableSeats     []*v1.Seat             `protobuf:"bytes,2,rep,name=available_seats,json=availableSeats,proto3" json:"available_seats,omitempty"`
	UnavailableSeatIds []string               `protobuf:"bytes,3,rep,name=unavailable_seat_ids,json=unavailableSeatIds,proto3" json:"unavailable_seat_ids,omitempty"`
	RemainingInSection int32                  `protobuf:"varint,4,opt,name=remaining_in_section,json=remainingInSection,proto3" json:"remaining_in_section,omitempty"`
	Error              *v1.Error              `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CheckAvailabilityResponse) Reset() {
	*x = CheckAvailabilityResponse{}
	mi := &file_proto_reservation_v1_inventory_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckAvailabilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAvailabilityResponse) ProtoMessage() {}

func (x *CheckAvailabilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_v1_inventory_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAvailabilityResponse.ProtoReflect.Descriptor instead.
func (*CheckAvailabilityResponse) Descriptor() ([]byte, []int) {
	return file_proto_reservation_v1_inventory_proto_rawDescGZIP(), []int{1}
}

func (x *CheckAvailabilityResponse) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

func (x *CheckAvailabilityResponse) GetAvailableSeats() []*v1.Seat {
	if x != nil {
		return x.AvailableSeats
	}
	return nil
}

func (x *CheckAvailabilityResponse) GetUnavailableSeatIds() []string {
	if x != nil {
		return x.UnavailableSeatIds
	}
	return nil
}

func (x *CheckAvailabilityResponse) GetRemainingInSection() int32 {
	if x != nil {
		return x.RemainingInSection
	}
	return 0
}

func (x *CheckAvailabilityResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

// Reserve seat request
type ReserveSeatRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ReservationId  string                 `protobuf:"bytes,1,opt,name=reservation_id,json=reservationId,proto3" json:"reservation_id,omitempty"`
	EventId        string                 `protobuf:"bytes,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	SeatIds        []string               `protobuf:"bytes,3,rep,name=seat_ids,json=seatIds,proto3" json:"seat_ids,omitempty"`
	Quantity       int32                  `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	UserId         string                 `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	HoldExpiresAt  *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=hold_expires_at,json=holdExpiresAt,proto3" json:"hold_expires_at,omitempty"`
	IdempotencyKey string                 `protobuf:"bytes,7,opt,name=idempotency_key,json=idempotencyKey,proto3" json:"idempotency_key,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ReserveSeatRequest) Reset() {
	*x = ReserveSeatRequest{}
	mi := &file_proto_reservation_v1_inventory_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReserveSeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveSeatRequest) ProtoMessage() {}

func (x *ReserveSeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_v1_inventory_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveSeatRequest.ProtoReflect.Descriptor instead.
func (*ReserveSeatRequest) Descriptor() ([]byte, []int) {
	return file_proto_reservation_v1_inventory_proto_rawDescGZIP(), []int{2}
}

func (x *ReserveSeatRequest) GetReservationId() string {
	if x != nil {
		return x.ReservationId
	}
	return ""
}

func (x *ReserveSeatRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *ReserveSeatRequest) GetSeatIds() []string {
	if x != nil {
		return x.SeatIds
	}
	return nil
}

func (x *ReserveSeatRequest) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *ReserveSeatRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ReserveSeatRequest) GetHoldExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.HoldExpiresAt
	}
	return nil
}

func (x *ReserveSeatRequest) GetIdempotencyKey() string {
	if x != nil {
		return x.IdempotencyKey
	}
	return ""
}

// Reserve seat response
type ReserveSeatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HoldId        string                 `protobuf:"bytes,1,opt,name=hold_id,json=holdId,proto3" json:"hold_id,omitempty"`
	ReservedSeats []*v1.Seat             `protobuf:"bytes,2,rep,name=reserved_seats,json=reservedSeats,proto3" json:"reserved_seats,omitempty"`
	HoldExpiresAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=hold_expires_at,json=holdExpiresAt,proto3" json:"hold_expires_at,omitempty"`
	Status        HoldStatus             `protobuf:"varint,4,opt,name=status,proto3,enum=reservation.v1.HoldStatus" json:"status,omitempty"`
	Error         *v1.Error              `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReserveSeatResponse) Reset() {
	*x = ReserveSeatResponse{}
	mi := &file_proto_reservation_v1_inventory_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReserveSeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveSeatResponse) ProtoMessage() {}

func (x *ReserveSeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_v1_inventory_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveSeatResponse.ProtoReflect.Descriptor instead.
func (*ReserveSeatResponse) Descriptor() ([]byte, []int) {
	return file_proto_reservation_v1_inventory_proto_rawDescGZIP(), []int{3}
}

func (x *ReserveSeatResponse) GetHoldId() string {
	if x != nil {
		return x.HoldId
	}
	return ""
}

func (x *ReserveSeatResponse) GetReservedSeats() []*v1.Seat {
	if x != nil {
		return x.ReservedSeats
	}
	return nil
}

func (x *ReserveSeatResponse) GetHoldExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.HoldExpiresAt
	}
	return nil
}

func (x *ReserveSeatResponse) GetStatus() HoldStatus {
	if x != nil {
		return x.Status
	}
	return HoldStatus_HOLD_STATUS_UNSPECIFIED
}

func (x *ReserveSeatResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

// Commit reservation request
type CommitReservationRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ReservationId   string                 `protobuf:"bytes,1,opt,name=reservation_id,json=reservationId,proto3" json:"reservation_id,omitempty"`
	EventId         string                 `protobuf:"bytes,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	SeatIds         []string               `protobuf:"bytes,3,rep,name=seat_ids,json=seatIds,proto3" json:"seat_ids,omitempty"`
	Quantity        int32                  `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	PaymentIntentId string                 `protobuf:"bytes,5,opt,name=payment_intent_id,json=paymentIntentId,proto3" json:"payment_intent_id,omitempty"`
	UserId          string                 `protobuf:"bytes,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IdempotencyKey  string                 `protobuf:"bytes,7,opt,name=idempotency_key,json=idempotencyKey,proto3" json:"idempotency_key,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CommitReservationRequest) Reset() {
	*x = CommitReservationRequest{}
	mi := &file_proto_reservation_v1_inventory_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitReservationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitReservationRequest) ProtoMessage() {}

func (x *CommitReservationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_v1_inventory_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitReservationRequest.ProtoReflect.Descriptor instead.
func (*CommitReservationRequest) Descriptor() ([]byte, []int) {
	return file_proto_reservation_v1_inventory_proto_rawDescGZIP(), []int{4}
}

func (x *CommitReservationRequest) GetReservationId() string {
	if x != nil {
		return x.ReservationId
	}
	return ""
}

func (x *CommitReservationRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *CommitReservationRequest) GetSeatIds() []string {
	if x != nil {
		return x.SeatIds
	}
	return nil
}

func (x *CommitReservationRequest) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *CommitReservationRequest) GetPaymentIntentId() string {
	if x != nil {
		return x.PaymentIntentId
	}
	return ""
}

func (x *CommitReservationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CommitReservationRequest) GetIdempotencyKey() string {
	if x != nil {
		return x.IdempotencyKey
	}
	return ""
}

// Commit reservation response
type CommitReservationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	SoldSeats     []*v1.Seat             `protobuf:"bytes,2,rep,name=sold_seats,json=soldSeats,proto3" json:"sold_seats,omitempty"`
	Status        CommitStatus           `protobuf:"varint,3,opt,name=status,proto3,enum=reservation.v1.CommitStatus" json:"status,omitempty"`
	CommittedAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=committed_at,json=committedAt,proto3" json:"committed_at,omitempty"`
	Error         *v1.Error              `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitReservationResponse) Reset() {
	*x = CommitReservationResponse{}
	mi := &file_proto_reservation_v1_inventory_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitReservationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitReservationResponse) ProtoMessage() {}

func (x *CommitReservationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_v1_inventory_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitReservationResponse.ProtoReflect.Descriptor instead.
func (*CommitReservationResponse) Descriptor() ([]byte, []int) {
	return file_proto_reservation_v1_inventory_proto_rawDescGZIP(), []int{5}
}

func (x *CommitReservationResponse) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *CommitReservationResponse) GetSoldSeats() []*v1.Seat {
	if x != nil {
		return x.SoldSeats
	}
	return nil
}

func (x *CommitReservationResponse) GetStatus() CommitStatus {
	if x != nil {
		return x.Status
	}
	return CommitStatus_COMMIT_STATUS_UNSPECIFIED
}

func (x *CommitReservationResponse) GetCommittedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CommittedAt
	}
	return nil
}

func (x *CommitReservationResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

// Release hold request
type ReleaseHoldRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ReservationId  string                 `protobuf:"bytes,1,opt,name=reservation_id,json=reservationId,proto3" json:"reservation_id,omitempty"`
	EventId        string                 `protobuf:"bytes,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	SeatIds        []string               `protobuf:"bytes,3,rep,name=seat_ids,json=seatIds,proto3" json:"seat_ids,omitempty"`
	Quantity       int32                  `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Reason         string                 `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"` // EXPIRED, CANCELLED, FAILED_PAYMENT
	IdempotencyKey string                 `protobuf:"bytes,6,opt,name=idempotency_key,json=idempotencyKey,proto3" json:"idempotency_key,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ReleaseHoldRequest) Reset() {
	*x = ReleaseHoldRequest{}
	mi := &file_proto_reservation_v1_inventory_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseHoldRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseHoldRequest) ProtoMessage() {}

func (x *ReleaseHoldRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_v1_inventory_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseHoldRequest.ProtoReflect.Descriptor instead.
func (*ReleaseHoldRequest) Descriptor() ([]byte, []int) {
	return file_proto_reservation_v1_inventory_proto_rawDescGZIP(), []int{6}
}

func (x *ReleaseHoldRequest) GetReservationId() string {
	if x != nil {
		return x.ReservationId
	}
	return ""
}

func (x *ReleaseHoldRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *ReleaseHoldRequest) GetSeatIds() []string {
	if x != nil {
		return x.SeatIds
	}
	return nil
}

func (x *ReleaseHoldRequest) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *ReleaseHoldRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ReleaseHoldRequest) GetIdempotencyKey() string {
	if x != nil {
		return x.IdempotencyKey
	}
	return ""
}

// Release hold response
type ReleaseHoldResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReleasedSeats []*v1.Seat             `protobuf:"bytes,1,rep,name=released_seats,json=releasedSeats,proto3" json:"released_seats,omitempty"`
	Status        ReleaseStatus          `protobuf:"varint,2,opt,name=status,proto3,enum=reservation.v1.ReleaseStatus" json:"status,omitempty"`
	ReleasedAt    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=released_at,json=releasedAt,proto3" json:"released_at,omitempty"`
	Error         *v1.Error              `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseHoldResponse) Reset() {
	*x = ReleaseHoldResponse{}
	mi := &file_proto_reservation_v1_inventory_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseHoldResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseHoldResponse) ProtoMessage() {}

func (x *ReleaseHoldResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_v1_inventory_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseHoldResponse.ProtoReflect.Descriptor instead.
func (*ReleaseHoldResponse) Descriptor() ([]byte, []int) {
	return file_proto_reservation_v1_inventory_proto_rawDescGZIP(), []int{7}
}

func (x *ReleaseHoldResponse) GetReleasedSeats() []*v1.Seat {
	if x != nil {
		return x.ReleasedSeats
	}
	return nil
}

func (x *ReleaseHoldResponse) GetStatus() ReleaseStatus {
	if x != nil {
		return x.Status
	}
	return ReleaseStatus_RELEASE_STATUS_UNSPECIFIED
}

func (x *ReleaseHoldResponse) GetReleasedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ReleasedAt
	}
	return nil
}

func (x *ReleaseHoldResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

// Get inventory status request
type GetInventoryStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Section       string                 `protobuf:"bytes,2,opt,name=section,proto3" json:"section,omitempty"` // Optional: specific section
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetInventoryStatusRequest) Reset() {
	*x = GetInventoryStatusRequest{}
	mi := &file_proto_reservation_v1_inventory_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInventoryStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInventoryStatusRequest) ProtoMessage() {}

func (x *GetInventoryStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_v1_inventory_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInventoryStatusRequest.ProtoReflect.Descriptor instead.
func (*GetInventoryStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_reservation_v1_inventory_proto_rawDescGZIP(), []int{8}
}

func (x *GetInventoryStatusRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *GetInventoryStatusRequest) GetSection() string {
	if x != nil {
		return x.Section
	}
	return ""
}

// Get inventory status response
type GetInventoryStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         *v1.Event              `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	Sections      []*SectionInventory    `protobuf:"bytes,2,rep,name=sections,proto3" json:"sections,omitempty"`
	Stats         *InventoryStats        `protobuf:"bytes,3,opt,name=stats,proto3" json:"stats,omitempty"`
	Error         *v1.Error              `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetInventoryStatusResponse) Reset() {
	*x = GetInventoryStatusResponse{}
	mi := &file_proto_reservation_v1_inventory_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInventoryStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInventoryStatusResponse) ProtoMessage() {}

func (x *GetInventoryStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_v1_inventory_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInventoryStatusResponse.ProtoReflect.Descriptor instead.
func (*GetInventoryStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_reservation_v1_inventory_proto_rawDescGZIP(), []int{9}
}

func (x *GetInventoryStatusResponse) GetEvent() *v1.Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *GetInventoryStatusResponse) GetSections() []*SectionInventory {
	if x != nil {
		return x.Sections
	}
	return nil
}

func (x *GetInventoryStatusResponse) GetStats() *InventoryStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *GetInventoryStatusResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

// Section inventory information
type SectionInventory struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SectionId      string                 `protobuf:"bytes,1,opt,name=section_id,json=sectionId,proto3" json:"section_id,omitempty"`
	SectionName    string                 `protobuf:"bytes,2,opt,name=section_name,json=sectionName,proto3" json:"section_name,omitempty"`
	TotalSeats     int32                  `protobuf:"varint,3,opt,name=total_seats,json=totalSeats,proto3" json:"total_seats,omitempty"`
	AvailableSeats int32                  `protobuf:"varint,4,opt,name=available_seats,json=availableSeats,proto3" json:"available_seats,omitempty"`
	ReservedSeats  int32                  `protobuf:"varint,5,opt,name=reserved_seats,json=reservedSeats,proto3" json:"reserved_seats,omitempty"`
	SoldSeats      int32                  `protobuf:"varint,6,opt,name=sold_seats,json=soldSeats,proto3" json:"sold_seats,omitempty"`
	BlockedSeats   int32                  `protobuf:"varint,7,opt,name=blocked_seats,json=blockedSeats,proto3" json:"blocked_seats,omitempty"`
	MinPrice       *v1.Money              `protobuf:"bytes,8,opt,name=min_price,json=minPrice,proto3" json:"min_price,omitempty"`
	MaxPrice       *v1.Money              `protobuf:"bytes,9,opt,name=max_price,json=maxPrice,proto3" json:"max_price,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SectionInventory) Reset() {
	*x = SectionInventory{}
	mi := &file_proto_reservation_v1_inventory_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SectionInventory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SectionInventory) ProtoMessage() {}

func (x *SectionInventory) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_v1_inventory_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SectionInventory.ProtoReflect.Descriptor instead.
func (*SectionInventory) Descriptor() ([]byte, []int) {
	return file_proto_reservation_v1_inventory_proto_rawDescGZIP(), []int{10}
}

func (x *SectionInventory) GetSectionId() string {
	if x != nil {
		return x.SectionId
	}
	return ""
}

func (x *SectionInventory) GetSectionName() string {
	if x != nil {
		return x.SectionName
	}
	return ""
}

func (x *SectionInventory) GetTotalSeats() int32 {
	if x != nil {
		return x.TotalSeats
	}
	return 0
}

func (x *SectionInventory) GetAvailableSeats() int32 {
	if x != nil {
		return x.AvailableSeats
	}
	return 0
}

func (x *SectionInventory) GetReservedSeats() int32 {
	if x != nil {
		return x.ReservedSeats
	}
	return 0
}

func (x *SectionInventory) GetSoldSeats() int32 {
	if x != nil {
		return x.SoldSeats
	}
	return 0
}

func (x *SectionInventory) GetBlockedSeats() int32 {
	if x != nil {
		return x.BlockedSeats
	}
	return 0
}

func (x *SectionInventory) GetMinPrice() *v1.Money {
	if x != nil {
		return x.MinPrice
	}
	return nil
}

func (x *SectionInventory) GetMaxPrice() *v1.Money {
	if x != nil {
		return x.MaxPrice
	}
	return nil
}

// Overall inventory statistics
type InventoryStats struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	TotalSeats             int32                  `protobuf:"varint,1,opt,name=total_seats,json=totalSeats,proto3" json:"total_seats,omitempty"`
	AvailableSeats         int32                  `protobuf:"varint,2,opt,name=available_seats,json=availableSeats,proto3" json:"available_seats,omitempty"`
	ReservedSeats          int32                  `protobuf:"varint,3,opt,name=reserved_seats,json=reservedSeats,proto3" json:"reserved_seats,omitempty"`
	SoldSeats              int32                  `protobuf:"varint,4,opt,name=sold_seats,json=soldSeats,proto3" json:"sold_seats,omitempty"`
	BlockedSeats           int32                  `protobuf:"varint,5,opt,name=blocked_seats,json=blockedSeats,proto3" json:"blocked_seats,omitempty"`
	AvailabilityPercentage float32                `protobuf:"fixed32,6,opt,name=availability_percentage,json=availabilityPercentage,proto3" json:"availability_percentage,omitempty"`
	LastUpdated            *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *InventoryStats) Reset() {
	*x = InventoryStats{}
	mi := &file_proto_reservation_v1_inventory_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InventoryStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryStats) ProtoMessage() {}

func (x *InventoryStats) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_v1_inventory_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryStats.ProtoReflect.Descriptor instead.
func (*InventoryStats) Descriptor() ([]byte, []int) {
	return file_proto_reservation_v1_inventory_proto_rawDescGZIP(), []int{11}
}

func (x *InventoryStats) GetTotalSeats() int32 {
	if x != nil {
		return x.TotalSeats
	}
	return 0
}

func (x *InventoryStats) GetAvailableSeats() int32 {
	if x != nil {
		return x.AvailableSeats
	}
	return 0
}

func (x *InventoryStats) GetReservedSeats() int32 {
	if x != nil {
		return x.ReservedSeats
	}
	return 0
}

func (x *InventoryStats) GetSoldSeats() int32 {
	if x != nil {
		return x.SoldSeats
	}
	return 0
}

func (x *InventoryStats) GetBlockedSeats() int32 {
	if x != nil {
		return x.BlockedSeats
	}
	return 0
}

func (x *InventoryStats) GetAvailabilityPercentage() float32 {
	if x != nil {
		return x.AvailabilityPercentage
	}
	return 0
}

func (x *InventoryStats) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

var File_proto_reservation_v1_inventory_proto protoreflect.FileDescriptor

const file_proto_reservation_v1_inventory_proto_rawDesc = "" +
	"\n" +
	"$proto/reservation/v1/inventory.proto\x12\x0ereservation.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cproto/common/v1/errors.proto\x1a\x1bproto/common/v1/types.proto\"\x86\x01\n" +
	"\x18CheckAvailabilityRequest\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x12\x19\n" +
	"\bseat_ids\x18\x02 \x03(\tR\aseatIds\x12\x1a\n" +
	"\bquantity\x18\x03 \x01(\x05R\bquantity\x12\x18\n" +
	"\asection\x18\x04 \x01(\tR\asection\"\xff\x01\n" +
	"\x19CheckAvailabilityResponse\x12\x1c\n" +
	"\tavailable\x18\x01 \x01(\bR\tavailable\x128\n" +
	"\x0favailable_seats\x18\x02 \x03(\v2\x0f.common.v1.SeatR\x0eavailableSeats\x120\n" +
	"\x14unavailable_seat_ids\x18\x03 \x03(\tR\x12unavailableSeatIds\x120\n" +
	"\x14remaining_in_section\x18\x04 \x01(\x05R\x12remainingInSection\x12&\n" +
	"\x05error\x18\x05 \x01(\v2\x10.common.v1.ErrorR\x05error\"\x93\x02\n" +
	"\x12ReserveSeatRequest\x12%\n" +
	"\x0ereservation_id\x18\x01 \x01(\tR\rreservationId\x12\x19\n" +
	"\bevent_id\x18\x02 \x01(\tR\aeventId\x12\x19\n" +
	"\bseat_ids\x18\x03 \x03(\tR\aseatIds\x12\x1a\n" +
	"\bquantity\x18\x04 \x01(\x05R\bquantity\x12\x17\n" +
	"\auser_id\x18\x05 \x01(\tR\x06userId\x12B\n" +
	"\x0fhold_expires_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\rholdExpiresAt\x12'\n" +
	"\x0fidempotency_key\x18\a \x01(\tR\x0eidempotencyKey\"\x86\x02\n" +
	"\x13ReserveSeatResponse\x12\x17\n" +
	"\ahold_id\x18\x01 \x01(\tR\x06holdId\x126\n" +
	"\x0ereserved_seats\x18\x02 \x03(\v2\x0f.common.v1.SeatR\rreservedSeats\x12B\n" +
	"\x0fhold_expires_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\rholdExpiresAt\x122\n" +
	"\x06status\x18\x04 \x01(\x0e2\x1a.reservation.v1.HoldStatusR\x06status\x12&\n" +
	"\x05error\x18\x05 \x01(\v2\x10.common.v1.ErrorR\x05error\"\x81\x02\n" +
	"\x18CommitReservationRequest\x12%\n" +
	"\x0ereservation_id\x18\x01 \x01(\tR\rreservationId\x12\x19\n" +
	"\bevent_id\x18\x02 \x01(\tR\aeventId\x12\x19\n" +
	"\bseat_ids\x18\x03 \x03(\tR\aseatIds\x12\x1a\n" +
	"\bquantity\x18\x04 \x01(\x05R\bquantity\x12*\n" +
	"\x11payment_intent_id\x18\x05 \x01(\tR\x0fpaymentIntentId\x12\x17\n" +
	"\auser_id\x18\x06 \x01(\tR\x06userId\x12'\n" +
	"\x0fidempotency_key\x18\a \x01(\tR\x0eidempotencyKey\"\x83\x02\n" +
	"\x19CommitReservationResponse\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId\x12.\n" +
	"\n" +
	"sold_seats\x18\x02 \x03(\v2\x0f.common.v1.SeatR\tsoldSeats\x124\n" +
	"\x06status\x18\x03 \x01(\x0e2\x1c.reservation.v1.CommitStatusR\x06status\x12=\n" +
	"\fcommitted_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\vcommittedAt\x12&\n" +
	"\x05error\x18\x05 \x01(\v2\x10.common.v1.ErrorR\x05error\"\xce\x01\n" +
	"\x12ReleaseHoldRequest\x12%\n" +
	"\x0ereservation_id\x18\x01 \x01(\tR\rreservationId\x12\x19\n" +
	"\bevent_id\x18\x02 \x01(\tR\aeventId\x12\x19\n" +
	"\bseat_ids\x18\x03 \x03(\tR\aseatIds\x12\x1a\n" +
	"\bquantity\x18\x04 \x01(\x05R\bquantity\x12\x16\n" +
	"\x06reason\x18\x05 \x01(\tR\x06reason\x12'\n" +
	"\x0fidempotency_key\x18\x06 \x01(\tR\x0eidempotencyKey\"\xe9\x01\n" +
	"\x13ReleaseHoldResponse\x126\n" +
	"\x0ereleased_seats\x18\x01 \x03(\v2\x0f.common.v1.SeatR\rreleasedSeats\x125\n" +
	"\x06status\x18\x02 \x01(\x0e2\x1d.reservation.v1.ReleaseStatusR\x06status\x12;\n" +
	"\vreleased_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"releasedAt\x12&\n" +
	"\x05error\x18\x04 \x01(\v2\x10.common.v1.ErrorR\x05error\"P\n" +
	"\x19GetInventoryStatusRequest\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x12\x18\n" +
	"\asection\x18\x02 \x01(\tR\asection\"\xe0\x01\n" +
	"\x1aGetInventoryStatusResponse\x12&\n" +
	"\x05event\x18\x01 \x01(\v2\x10.common.v1.EventR\x05event\x12<\n" +
	"\bsections\x18\x02 \x03(\v2 .reservation.v1.SectionInventoryR\bsections\x124\n" +
	"\x05stats\x18\x03 \x01(\v2\x1e.reservation.v1.InventoryStatsR\x05stats\x12&\n" +
	"\x05error\x18\x04 \x01(\v2\x10.common.v1.ErrorR\x05error\"\xe7\x02\n" +
	"\x10SectionInventory\x12\x1d\n" +
	"\n" +
	"section_id\x18\x01 \x01(\tR\tsectionId\x12!\n" +
	"\fsection_name\x18\x02 \x01(\tR\vsectionName\x12\x1f\n" +
	"\vtotal_seats\x18\x03 \x01(\x05R\n" +
	"totalSeats\x12'\n" +
	"\x0favailable_seats\x18\x04 \x01(\x05R\x0eavailableSeats\x12%\n" +
	"\x0ereserved_seats\x18\x05 \x01(\x05R\rreservedSeats\x12\x1d\n" +
	"\n" +
	"sold_seats\x18\x06 \x01(\x05R\tsoldSeats\x12#\n" +
	"\rblocked_seats\x18\a \x01(\x05R\fblockedSeats\x12-\n" +
	"\tmin_price\x18\b \x01(\v2\x10.common.v1.MoneyR\bminPrice\x12-\n" +
	"\tmax_price\x18\t \x01(\v2\x10.common.v1.MoneyR\bmaxPrice\"\xbd\x02\n" +
	"\x0eInventoryStats\x12\x1f\n" +
	"\vtotal_seats\x18\x01 \x01(\x05R\n" +
	"totalSeats\x12'\n" +
	"\x0favailable_seats\x18\x02 \x01(\x05R\x0eavailableSeats\x12%\n" +
	"\x0ereserved_seats\x18\x03 \x01(\x05R\rreservedSeats\x12\x1d\n" +
	"\n" +
	"sold_seats\x18\x04 \x01(\x05R\tsoldSeats\x12#\n" +
	"\rblocked_seats\x18\x05 \x01(\x05R\fblockedSeats\x127\n" +
	"\x17availability_percentage\x18\x06 \x01(\x02R\x16availabilityPercentage\x12=\n" +
	"\flast_updated\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\vlastUpdated*\x8f\x01\n" +
	"\n" +
	"HoldStatus\x12\x1b\n" +
	"\x17HOLD_STATUS_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12HOLD_STATUS_ACTIVE\x10\x01\x12\x17\n" +
	"\x13HOLD_STATUS_EXPIRED\x10\x02\x12\x18\n" +
	"\x14HOLD_STATUS_RELEASED\x10\x03\x12\x19\n" +
	"\x15HOLD_STATUS_COMMITTED\x10\x04*\xaf\x01\n" +
	"\fCommitStatus\x12\x1d\n" +
	"\x19COMMIT_STATUS_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15COMMIT_STATUS_SUCCESS\x10\x01\x12 \n" +
	"\x1cCOMMIT_STATUS_FAILED_PAYMENT\x10\x02\x12 \n" +
	"\x1cCOMMIT_STATUS_FAILED_EXPIRED\x10\x03\x12!\n" +
	"\x1dCOMMIT_STATUS_FAILED_CONFLICT\x10\x04*\xa9\x01\n" +
	"\rReleaseStatus\x12\x1e\n" +
	"\x1aRELEASE_STATUS_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16RELEASE_STATUS_SUCCESS\x10\x01\x12#\n" +
	"\x1fRELEASE_STATUS_ALREADY_RELEASED\x10\x02\x12\x1c\n" +
	"\x18RELEASE_STATUS_NOT_FOUND\x10\x03\x12\x19\n" +
	"\x15RELEASE_STATUS_FAILED\x10\x042\x83\x04\n" +
	"\x10InventoryService\x12h\n" +
	"\x11CheckAvailability\x12(.reservation.v1.CheckAvailabilityRequest\x1a).reservation.v1.CheckAvailabilityResponse\x12V\n" +
	"\vReserveSeat\x12\".reservation.v1.ReserveSeatRequest\x1a#.reservation.v1.ReserveSeatResponse\x12h\n" +
	"\x11CommitReservation\x12(.reservation.v1.CommitReservationRequest\x1a).reservation.v1.CommitReservationResponse\x12V\n" +
	"\vReleaseHold\x12\".reservation.v1.ReleaseHoldRequest\x1a#.reservation.v1.ReleaseHoldResponse\x12k\n" +
	"\x12GetInventoryStatus\x12).reservation.v1.GetInventoryStatusRequest\x1a*.reservation.v1.GetInventoryStatusResponseB\x82\x01\n" +
	" com.traffic_tacos.reservation.v1B\x0eInventoryProtoP\x01ZLgithub.com/traffic-tacos/proto-contracts/gen/go/reservation/v1;reservationv1b\x06proto3"

var (
	file_proto_reservation_v1_inventory_proto_rawDescOnce sync.Once
	file_proto_reservation_v1_inventory_proto_rawDescData []byte
)

func file_proto_reservation_v1_inventory_proto_rawDescGZIP() []byte {
	file_proto_reservation_v1_inventory_proto_rawDescOnce.Do(func() {
		file_proto_reservation_v1_inventory_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_reservation_v1_inventory_proto_rawDesc), len(file_proto_reservation_v1_inventory_proto_rawDesc)))
	})
	return file_proto_reservation_v1_inventory_proto_rawDescData
}

var file_proto_reservation_v1_inventory_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_reservation_v1_inventory_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_proto_reservation_v1_inventory_proto_goTypes = []any{
	(HoldStatus)(0),                    // 0: reservation.v1.HoldStatus
	(CommitStatus)(0),                  // 1: reservation.v1.CommitStatus
	(ReleaseStatus)(0),                 // 2: reservation.v1.ReleaseStatus
	(*CheckAvailabilityRequest)(nil),   // 3: reservation.v1.CheckAvailabilityRequest
	(*CheckAvailabilityResponse)(nil),  // 4: reservation.v1.CheckAvailabilityResponse
	(*ReserveSeatRequest)(nil),         // 5: reservation.v1.ReserveSeatRequest
	(*ReserveSeatResponse)(nil),        // 6: reservation.v1.ReserveSeatResponse
	(*CommitReservationRequest)(nil),   // 7: reservation.v1.CommitReservationRequest
	(*CommitReservationResponse)(nil),  // 8: reservation.v1.CommitReservationResponse
	(*ReleaseHoldRequest)(nil),         // 9: reservation.v1.ReleaseHoldRequest
	(*ReleaseHoldResponse)(nil),        // 10: reservation.v1.ReleaseHoldResponse
	(*GetInventoryStatusRequest)(nil),  // 11: reservation.v1.GetInventoryStatusRequest
	(*GetInventoryStatusResponse)(nil), // 12: reservation.v1.GetInventoryStatusResponse
	(*SectionInventory)(nil),           // 13: reservation.v1.SectionInventory
	(*InventoryStats)(nil),             // 14: reservation.v1.InventoryStats
	(*v1.Seat)(nil),                    // 15: common.v1.Seat
	(*v1.Error)(nil),                   // 16: common.v1.Error
	(*timestamppb.Timestamp)(nil),      // 17: google.protobuf.Timestamp
	(*v1.Event)(nil),                   // 18: common.v1.Event
	(*v1.Money)(nil),                   // 19: common.v1.Money
}
var file_proto_reservation_v1_inventory_proto_depIdxs = []int32{
	15, // 0: reservation.v1.CheckAvailabilityResponse.available_seats:type_name -> common.v1.Seat
	16, // 1: reservation.v1.CheckAvailabilityResponse.error:type_name -> common.v1.Error
	17, // 2: reservation.v1.ReserveSeatRequest.hold_expires_at:type_name -> google.protobuf.Timestamp
	15, // 3: reservation.v1.ReserveSeatResponse.reserved_seats:type_name -> common.v1.Seat
	17, // 4: reservation.v1.ReserveSeatResponse.hold_expires_at:type_name -> google.protobuf.Timestamp
	0,  // 5: reservation.v1.ReserveSeatResponse.status:type_name -> reservation.v1.HoldStatus
	16, // 6: reservation.v1.ReserveSeatResponse.error:type_name -> common.v1.Error
	15, // 7: reservation.v1.CommitReservationResponse.sold_seats:type_name -> common.v1.Seat
	1,  // 8: reservation.v1.CommitReservationResponse.status:type_name -> reservation.v1.CommitStatus
	17, // 9: reservation.v1.CommitReservationResponse.committed_at:type_name -> google.protobuf.Timestamp
	16, // 10: reservation.v1.CommitReservationResponse.error:type_name -> common.v1.Error
	15, // 11: reservation.v1.ReleaseHoldResponse.released_seats:type_name -> common.v1.Seat
	2,  // 12: reservation.v1.ReleaseHoldResponse.status:type_name -> reservation.v1.ReleaseStatus
	17, // 13: reservation.v1.ReleaseHoldResponse.released_at:type_name -> google.protobuf.Timestamp
	16, // 14: reservation.v1.ReleaseHoldResponse.error:type_name -> common.v1.Error
	18, // 15: reservation.v1.GetInventoryStatusResponse.event:type_name -> common.v1.Event
	13, // 16: reservation.v1.GetInventoryStatusResponse.sections:type_name -> reservation.v1.SectionInventory
	14, // 17: reservation.v1.GetInventoryStatusResponse.stats:type_name -> reservation.v1.InventoryStats
	16, // 18: reservation.v1.GetInventoryStatusResponse.error:type_name -> common.v1.Error
	19, // 19: reservation.v1.SectionInventory.min_price:type_name -> common.v1.Money
	19, // 20: reservation.v1.SectionInventory.max_price:type_name -> common.v1.Money
	17, // 21: reservation.v1.InventoryStats.last_updated:type_name -> google.protobuf.Timestamp
	3,  // 22: reservation.v1.InventoryService.CheckAvailability:input_type -> reservation.v1.CheckAvailabilityRequest
	5,  // 23: reservation.v1.InventoryService.ReserveSeat:input_type -> reservation.v1.ReserveSeatRequest
	7,  // 24: reservation.v1.InventoryService.CommitReservation:input_type -> reservation.v1.CommitReservationRequest
	9,  // 25: reservation.v1.InventoryService.ReleaseHold:input_type -> reservation.v1.ReleaseHoldRequest
	11, // 26: reservation.v1.InventoryService.GetInventoryStatus:input_type -> reservation.v1.GetInventoryStatusRequest
	4,  // 27: reservation.v1.InventoryService.CheckAvailability:output_type -> reservation.v1.CheckAvailabilityResponse
	6,  // 28: reservation.v1.InventoryService.ReserveSeat:output_type -> reservation.v1.ReserveSeatResponse
	8,  // 29: reservation.v1.InventoryService.CommitReservation:output_type -> reservation.v1.CommitReservationResponse
	10, // 30: reservation.v1.InventoryService.ReleaseHold:output_type -> reservation.v1.ReleaseHoldResponse
	12, // 31: reservation.v1.InventoryService.GetInventoryStatus:output_type -> reservation.v1.GetInventoryStatusResponse
	27, // [27:32] is the sub-list for method output_type
	22, // [22:27] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_proto_reservation_v1_inventory_proto_init() }
func file_proto_reservation_v1_inventory_proto_init() {
	if File_proto_reservation_v1_inventory_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_reservation_v1_inventory_proto_rawDesc), len(file_proto_reservation_v1_inventory_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_reservation_v1_inventory_proto_goTypes,
		DependencyIndexes: file_proto_reservation_v1_inventory_proto_depIdxs,
		EnumInfos:         file_proto_reservation_v1_inventory_proto_enumTypes,
		MessageInfos:      file_proto_reservation_v1_inventory_proto_msgTypes,
	}.Build()
	File_proto_reservation_v1_inventory_proto = out.File
	file_proto_reservation_v1_inventory_proto_goTypes = nil
	file_proto_reservation_v1_inventory_proto_depIdxs = nil
}
