// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/gateway/v1/webhook.proto
// Protobuf Java Version: 4.32.1

package com.traffic_tacos.gateway.v1;

@com.google.protobuf.Generated
public interface ReceiveExpiryWebhookRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:gateway.v1.ReceiveExpiryWebhookRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string webhook_id = 1 [json_name = "webhookId"];</code>
   * @return The webhookId.
   */
  java.lang.String getWebhookId();
  /**
   * <code>string webhook_id = 1 [json_name = "webhookId"];</code>
   * @return The bytes for webhookId.
   */
  com.google.protobuf.ByteString
      getWebhookIdBytes();

  /**
   * <code>string reservation_id = 2 [json_name = "reservationId"];</code>
   * @return The reservationId.
   */
  java.lang.String getReservationId();
  /**
   * <code>string reservation_id = 2 [json_name = "reservationId"];</code>
   * @return The bytes for reservationId.
   */
  com.google.protobuf.ByteString
      getReservationIdBytes();

  /**
   * <code>.google.protobuf.Timestamp expired_at = 3 [json_name = "expiredAt"];</code>
   * @return Whether the expiredAt field is set.
   */
  boolean hasExpiredAt();
  /**
   * <code>.google.protobuf.Timestamp expired_at = 3 [json_name = "expiredAt"];</code>
   * @return The expiredAt.
   */
  com.google.protobuf.Timestamp getExpiredAt();
  /**
   * <code>.google.protobuf.Timestamp expired_at = 3 [json_name = "expiredAt"];</code>
   */
  com.google.protobuf.TimestampOrBuilder getExpiredAtOrBuilder();

  /**
   * <pre>
   * eventbridge, lambda, scheduler
   * </pre>
   *
   * <code>string source = 4 [json_name = "source"];</code>
   * @return The source.
   */
  java.lang.String getSource();
  /**
   * <pre>
   * eventbridge, lambda, scheduler
   * </pre>
   *
   * <code>string source = 4 [json_name = "source"];</code>
   * @return The bytes for source.
   */
  com.google.protobuf.ByteString
      getSourceBytes();

  /**
   * <code>map&lt;string, string&gt; metadata = 5 [json_name = "metadata"];</code>
   */
  int getMetadataCount();
  /**
   * <code>map&lt;string, string&gt; metadata = 5 [json_name = "metadata"];</code>
   */
  boolean containsMetadata(
      java.lang.String key);
  /**
   * Use {@link #getMetadataMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getMetadata();
  /**
   * <code>map&lt;string, string&gt; metadata = 5 [json_name = "metadata"];</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getMetadataMap();
  /**
   * <code>map&lt;string, string&gt; metadata = 5 [json_name = "metadata"];</code>
   */
  /* nullable */
java.lang.String getMetadataOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <code>map&lt;string, string&gt; metadata = 5 [json_name = "metadata"];</code>
   */
  java.lang.String getMetadataOrThrow(
      java.lang.String key);
}
