syntax = "proto3";

package common.v1;

option go_package = "github.com/traffic-tacos/proto-contracts/gen/go/common/v1;commonv1";
option java_package = "com.traffic_tacos.common.v1";
option java_multiple_files = true;
option java_outer_classname = "ErrorsProto";

// Standard error response
message Error {
  ErrorCode code = 1;
  string message = 2;
  string trace_id = 3;
  repeated ErrorDetail details = 4;
}

// Error detail for additional context
message ErrorDetail {
  string field = 1;
  string reason = 2;
  string value = 3;
}

// Standard error codes across all services
enum ErrorCode {
  ERROR_CODE_UNSPECIFIED = 0;

  // Authentication and authorization errors (4xx)
  ERROR_CODE_UNAUTHENTICATED = 1;
  ERROR_CODE_FORBIDDEN = 2;
  ERROR_CODE_UNAUTHORIZED = 3;

  // Request validation errors (4xx)
  ERROR_CODE_INVALID_ARGUMENT = 4;
  ERROR_CODE_NOT_FOUND = 5;
  ERROR_CODE_ALREADY_EXISTS = 6;
  ERROR_CODE_FAILED_PRECONDITION = 7;

  // Rate limiting and quota errors (4xx)
  ERROR_CODE_RATE_LIMITED = 8;
  ERROR_CODE_QUOTA_EXCEEDED = 9;

  // Idempotency errors (4xx)
  ERROR_CODE_IDEMPOTENCY_REQUIRED = 10;
  ERROR_CODE_IDEMPOTENCY_CONFLICT = 11;

  // Business logic errors (4xx)
  ERROR_CODE_RESERVATION_EXPIRED = 12;
  ERROR_CODE_PAYMENT_NOT_APPROVED = 13;
  ERROR_CODE_INVENTORY_CONFLICT = 14;
  ERROR_CODE_INSUFFICIENT_INVENTORY = 15;

  // Service availability errors (5xx)
  ERROR_CODE_INTERNAL = 16;
  ERROR_CODE_UNAVAILABLE = 17;
  ERROR_CODE_TIMEOUT = 18;
  ERROR_CODE_UPSTREAM_TIMEOUT = 19;
  ERROR_CODE_UPSTREAM_ERROR = 20;

  // Data consistency errors (5xx)
  ERROR_CODE_DATA_CORRUPTION = 21;
  ERROR_CODE_CONCURRENT_MODIFICATION = 22;
}